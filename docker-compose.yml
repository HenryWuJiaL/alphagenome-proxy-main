version: '3.8'

services:
  # AlphaGenome Communication Proxy
  alphagenome-proxy:
    build: .
    ports:
      - "50051:50051"
    environment:
      - JSON_SERVICE_BASE_URL=${JSON_SERVICE_BASE_URL:-http://127.0.0.1:8000}
      - ALPHAGENOME_API_KEY=${ALPHAGENOME_API_KEY:-}
      - API_KEY_HEADER=${API_KEY_HEADER:-Authorization}
      - API_KEY_PREFIX=${API_KEY_PREFIX:-Bearer }
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import grpc; channel = grpc.insecure_channel('localhost:50051'); channel.close()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Mock JSON Service (for testing)
  mock-json-service:
    image: python:3.11-slim
    ports:
      - "8000:8000"
    working_dir: /app
    volumes:
      - ./test_communication_proxy_manual.py:/app/test_communication_proxy_manual.py
    command: >
      sh -c "pip install flask &&
             python -c '
             from test_communication_proxy_manual import MockJSONService;
             service = MockJSONService(port=8000);
             service.app.run(host=\"0.0.0.0\", port=8000, debug=False)
             '"
    environment:
      - FLASK_ENV=production
    restart: unless-stopped 